<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;
use DummyRootNamespaceHttp\Controllers\Controller;

use DummyRootNamespaceModels\{{crudNameCap}};
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect, Flash;
use Carbon\Carbon;
use Session;

class DummyClass extends Controller
{

    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function index()
    {
        ${{crudNamePlural}} = {{crudNameCap}}::latest()->get();

        return view('{{viewPath}}{{crudName}}.index', compact('{{crudNamePlural}}'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create()
    {
        return view('{{viewPath}}{{crudName}}.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @return Response
     */
    public function store(Request $request)
    {
        {{validationRules}}
        $postCreate = {{crudNameCap}}::create($request->all());

        if ($postCreate) {
            Flash::success('{{crudNameCap}} successfully saved');
        }
        else
        {
            Flash::error('Oop! some thing wrong {{crudNameCap}} not saved');
        }
        return redirect('/panelarea/{{crudName}}');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function show($id)
    {
        ${{crudNameSingular}} = {{crudNameCap}}::findOrFail($id);

        return view('{{viewPath}}{{crudName}}.show', compact('{{crudNameSingular}}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function edit($id)
    {
        ${{crudNameSingular}} = {{crudNameCap}}::findOrFail($id);

        return view('{{viewPath}}{{crudName}}.edit', compact('{{crudNameSingular}}'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function update($id, Request $request)
    {
        {{validationRules}}
        ${{crudNameSingular}} = {{crudNameCap}}::findOrFail($id);
        $postUpdate = ${{crudNameSingular}}->update($request->all());

        if ($postUpdate) {
            Flash::success('{{crudNameCap}} successfully updated!');
        }
        else
        {
            Flash::error('Oop! some thing wrong {{crudNameCap}} not updated');
        }
        return redirect('/panelarea/{{crudName}}');
    }

    public function destroy($id)
    {
        $postDelete={{crudNameCap}}::destroy($id);
         if ($postDelete) {
            Flash::success('{{crudNameCap}} successfully deleted!');
        }
        else
        {
            Flash::error('Oop! some thing wrong {{crudNameCap}} not deleted');
        }
        return Redirect::back();
        //return redirect('/panelarea/{{crudName}}');
    }

    public function status($id)
    {
        ${{crudNameSingular}} = {{crudNameCap}}::findOrFail($id);
        if (${{crudNameSingular}}->isactive == 1 ) {
            $status = 0;
        }
        else{
            $status = 1;
        }
        ${{crudNameSingular}}->isactive = $status;
        if(${{crudNameSingular}}->save()){
            Flash::success('Status successfully updated');
        }
        else
        {
            Flash::error('Oop! some thing wrong Status not updated');
        }
        return Redirect::back();
        //return redirect('/panelarea/{{crudName}}');
    }

}
